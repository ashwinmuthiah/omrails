class Pin < ActiveRecord::Base
  attr_accessible :description, :image, :image_remote_url
  #Validates a pin before it can be created. At least must be present, etc.
  #See more validations at rails validations on google

  validates :description, presence: true
  validates :user_id, presence: true
  validates_attachment :image, presence: true,
  														 content_type: { content_type: ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'] },
  														 size: { less_than: 5.megabytes } 
  #Make sure an image is there, in which format, and size.
  #different relationships at rails associtaions
  #An assocication generated by paperclip to allow attaching things.
  #Paper clip allows you to style the image, see below.
  belongs_to :user
  has_attached_file :image, styles: { medium: "320x240>"}

  def image_remote_url=(url_value) 
    # self refers to pin
    # url_value.blank? -> if url_value is blank, then the pin will come from
    # an upoaded image
    self.image = URI.parse(url_value) unless url_value.blank?
    # this method already exists, super ensures that all those functions
    # still happen on top of what we are adding here
    super
  end
end
